kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/jelle/ProgrammingProjects/Android/AndroidTest/app/src/main/java/com/laerodev/androidtest/ambilight/MediaProjectionService.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:249)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:onCreate visibility:public modality:OPEN <> ($this:com.laerodev.androidtest.ambilight.MediaProjectionService) returnType:kotlin.Unit
  overridden:
    public open fun onCreate (): kotlin.Unit declared in android.app.Service
  $this: VALUE_PARAMETER name:<this> type:com.laerodev.androidtest.ambilight.MediaProjectionService
  BLOCK_BODY
    CALL 'public open fun onCreate (): kotlin.Unit declared in android.app.Service' superQualifier='CLASS IR_EXTERNAL_JAVA_DECLARATION_STUB CLASS name:Service modality:ABSTRACT visibility:public superTypes:[android.content.ContextWrapper; android.content.ComponentCallbacks2]' type=kotlin.Unit origin=null
      $this: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
    VAR name:windowManager type:android.view.WindowManager [val]
      BLOCK type=android.view.WindowManager origin=null
        VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
          CALL 'public open fun getSystemService (p0: @[EnhancedNullability] kotlin.String): @[FlexibleNullability] kotlin.Any? [fake_override] declared in com.laerodev.androidtest.ambilight.MediaProjectionService' type=@[FlexibleNullability] kotlin.Any? origin=null
            $this: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
            p0: CONST String type=kotlin.String value="window"
        CALL 'public final fun checkNotNull (object: kotlin.Any?, message: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
          object: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=kotlin.Any? origin=null
          message: CONST String type=kotlin.String value="null cannot be cast to non-null type android.view.WindowManager"
        TYPE_OP type=android.view.WindowManager? origin=CAST typeOperand=android.view.WindowManager?
          GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=kotlin.Any? origin=null
    CALL 'public open fun getMetrics (p0: @[FlexibleNullability] android.util.DisplayMetrics?): kotlin.Unit declared in android.view.Display' type=kotlin.Unit origin=null
      $this: CALL 'public abstract fun getDefaultDisplay (): @[FlexibleNullability] android.view.Display? declared in android.view.WindowManager' type=@[FlexibleNullability] android.view.Display? origin=GET_PROPERTY
        $this: GET_VAR 'val windowManager: android.view.WindowManager [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=android.view.WindowManager origin=null
      p0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:displayMetrics type:android.util.DisplayMetrics visibility:private [final]' type=android.util.DisplayMetrics origin=null
        receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:width type:kotlin.Int visibility:private' type=kotlin.Unit origin=null
      receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
      value: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:widthPixels type:kotlin.Int visibility:public declared in android.util.DisplayMetrics' type=kotlin.Int superQualifierSymbol=android.util.DisplayMetrics origin=null
        receiver: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:displayMetrics type:android.util.DisplayMetrics visibility:private [final]' type=android.util.DisplayMetrics origin=null
          receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:height type:kotlin.Int visibility:private' type=kotlin.Unit origin=null
      receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
      value: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:heightPixels type:kotlin.Int visibility:public declared in android.util.DisplayMetrics' type=kotlin.Int superQualifierSymbol=android.util.DisplayMetrics origin=null
        receiver: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:displayMetrics type:android.util.DisplayMetrics visibility:private [final]' type=android.util.DisplayMetrics origin=null
          receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:density type:kotlin.Int visibility:private' type=kotlin.Unit origin=null
      receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
      value: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:densityDpi type:kotlin.Int visibility:public declared in android.util.DisplayMetrics' type=kotlin.Int superQualifierSymbol=android.util.DisplayMetrics origin=null
        receiver: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:displayMetrics type:android.util.DisplayMetrics visibility:private [final]' type=android.util.DisplayMetrics origin=null
          receiver: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
    SET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:orientation type:kotlin.Int visibility:public [final,static] declared in android.R.attr' type=kotlin.Unit superQualifierSymbol=android.R.attr origin=EQ
      value: CALL 'public open fun getRotation (): kotlin.Int declared in android.view.Display' type=kotlin.Int origin=GET_PROPERTY
        $this: CALL 'public abstract fun getDefaultDisplay (): @[FlexibleNullability] android.view.Display? declared in android.view.WindowManager' type=@[FlexibleNullability] android.view.Display? origin=GET_PROPERTY
          $this: GET_VAR 'val windowManager: android.view.WindowManager [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=android.view.WindowManager origin=null
    VAR name:channel type:android.app.NotificationChannel [val]
      CONSTRUCTOR_CALL 'public constructor <init> (p0: @[FlexibleNullability] kotlin.String?, p1: @[FlexibleNullability] kotlin.CharSequence?, p2: kotlin.Int) declared in android.app.NotificationChannel' type=android.app.NotificationChannel origin=null
        p0: CONST String type=kotlin.String value="screen_capture_channel"
        p1: CONST String type=kotlin.String value="Screen Capture"
        p2: CONST Int type=kotlin.Int value=3
    VAR name:manager type:@[FlexibleNullability] android.app.NotificationManager? [val]
      CALL 'public final fun getSystemService <T> (p0: @[EnhancedNullability] java.lang.Class<@[FlexibleNullability] T of com.laerodev.androidtest.ambilight.MediaProjectionService.getSystemService?>): @[FlexibleNullability] T of com.laerodev.androidtest.ambilight.MediaProjectionService.getSystemService? [fake_override] declared in com.laerodev.androidtest.ambilight.MediaProjectionService' type=@[FlexibleNullability] android.app.NotificationManager? origin=null
        <T>: @[FlexibleNullability] android.app.NotificationManager?
        $this: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
        p0: CALL 'public final fun <get-java> <T> (): java.lang.Class<T of kotlin.jvm.JvmClassMappingKt.<get-java>> declared in kotlin.jvm.JvmClassMappingKt' type=java.lang.Class<android.app.NotificationManager> origin=GET_PROPERTY
          <T>: android.app.NotificationManager
          $receiver: CLASS_REFERENCE 'CLASS IR_EXTERNAL_JAVA_DECLARATION_STUB CLASS name:NotificationManager modality:OPEN visibility:public superTypes:[kotlin.Any]' type=kotlin.reflect.KClass<android.app.NotificationManager>
    CALL 'public open fun createNotificationChannel (p0: @[EnhancedNullability] android.app.NotificationChannel): kotlin.Unit declared in android.app.NotificationManager' type=kotlin.Unit origin=null
      $this: GET_VAR 'val manager: @[FlexibleNullability] android.app.NotificationManager? [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=@[FlexibleNullability] android.app.NotificationManager? origin=null
      p0: GET_VAR 'val channel: android.app.NotificationChannel [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=android.app.NotificationChannel origin=null
    VAR name:notification type:@[FlexibleNullability] @[NonNull] android.app.Notification? [val]
      CALL 'public open fun build (): @[NonNull] @[FlexibleNullability] android.app.Notification? declared in androidx.core.app.NotificationCompat.Builder' type=@[FlexibleNullability] @[NonNull] android.app.Notification? origin=null
        $this: CALL 'public open fun setSmallIcon (p0: kotlin.Int): @[NonNull] @[FlexibleNullability] androidx.core.app.NotificationCompat.Builder? declared in androidx.core.app.NotificationCompat.Builder' type=@[FlexibleNullability] @[NonNull] androidx.core.app.NotificationCompat.Builder? origin=null
          $this: CALL 'public open fun setContentText (p0: @[Nullable] @[FlexibleNullability] kotlin.CharSequence?): @[NonNull] @[FlexibleNullability] androidx.core.app.NotificationCompat.Builder? declared in androidx.core.app.NotificationCompat.Builder' type=@[FlexibleNullability] @[NonNull] androidx.core.app.NotificationCompat.Builder? origin=null
            $this: CALL 'public open fun setContentTitle (p0: @[Nullable] @[FlexibleNullability] kotlin.CharSequence?): @[NonNull] @[FlexibleNullability] androidx.core.app.NotificationCompat.Builder? declared in androidx.core.app.NotificationCompat.Builder' type=@[FlexibleNullability] @[NonNull] androidx.core.app.NotificationCompat.Builder? origin=null
              $this: CONSTRUCTOR_CALL 'public constructor <init> (p0: @[NonNull] @[FlexibleNullability] android.content.Context?, p1: @[NonNull] @[FlexibleNullability] kotlin.String?) declared in androidx.core.app.NotificationCompat.Builder' type=androidx.core.app.NotificationCompat.Builder origin=null
                p0: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
                p1: CONST String type=kotlin.String value="screen_capture_channel"
              p0: CONST String type=kotlin.String value="Screen Capturing"
            p0: CONST String type=kotlin.String value="Your screen is being captured."
          p0: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:ic_launcher_foreground type:kotlin.Int visibility:public [static] declared in com.laerodev.androidtest.R.drawable' type=kotlin.Int superQualifierSymbol=com.laerodev.androidtest.R.drawable origin=null
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
          arg0: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:SDK_INT type:kotlin.Int visibility:public [final,static] declared in android.os.Build.VERSION' type=kotlin.Int superQualifierSymbol=android.os.Build.VERSION origin=null
          arg1: CONST Int type=kotlin.Int value=29
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun startForeground (p0: kotlin.Int, p1: @[EnhancedNullability] android.app.Notification, p2: kotlin.Int): kotlin.Unit [fake_override] declared in com.laerodev.androidtest.ambilight.MediaProjectionService' type=kotlin.Unit origin=null
            $this: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
            p0: CONST Int type=kotlin.Int value=1
            p1: GET_VAR 'val notification: @[FlexibleNullability] @[NonNull] android.app.Notification? [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=@[FlexibleNullability] @[NonNull] android.app.Notification? origin=null
            p2: CONST Int type=kotlin.Int value=32
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun startForeground (p0: kotlin.Int, p1: @[FlexibleNullability] android.app.Notification?): kotlin.Unit [fake_override] declared in com.laerodev.androidtest.ambilight.MediaProjectionService' type=kotlin.Unit origin=null
            $this: GET_VAR '<this>: com.laerodev.androidtest.ambilight.MediaProjectionService declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=com.laerodev.androidtest.ambilight.MediaProjectionService origin=null
            p0: CONST Int type=kotlin.Int value=1
            p1: GET_VAR 'val notification: @[FlexibleNullability] @[NonNull] android.app.Notification? [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=@[FlexibleNullability] @[NonNull] android.app.Notification? origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: java.lang.AssertionError: access of const val: SET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:orientation type:kotlin.Int visibility:public [final,static] declared in android.R.attr' type=kotlin.Unit superQualifierSymbol=android.R.attr origin=EQ
  value: CALL 'public open fun getRotation (): kotlin.Int declared in android.view.Display' type=kotlin.Int origin=GET_PROPERTY
    $this: CALL 'public abstract fun getDefaultDisplay (): @[FlexibleNullability] android.view.Display? declared in android.view.WindowManager' type=@[FlexibleNullability] android.view.Display? origin=GET_PROPERTY
      $this: GET_VAR 'val windowManager: android.view.WindowManager [val] declared in com.laerodev.androidtest.ambilight.MediaProjectionService.onCreate' type=android.view.WindowManager origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:861)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSetField(IrElementVisitor.kt:206)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:908)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrSetField.accept(IrSetField.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 54 more


